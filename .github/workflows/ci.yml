on:
  push:
    branches: ["master", "tokio-*.x"]
  pull_request:
    branches: ["master", "tokio-*.x"]

name: CI

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # Change to specific Rust release to pin
  rust_stable: stable
  #rust_nightly: nightly-2022-03-21 Err
  #rust_nightly: nightly-2022-04-14 Err
  rust_nightly: nightly-2022-04-18
  #rust_nightly: nightly-2022-04-22 Ok
  #rust_nightly: nightly-2022-04-30 Ok
  #rust_nightly: nightly-2022-05-14 Ok
  rust_clippy: 1.52.0
  rust_min: 1.49.0

defaults:
  run:
    shell: bash

jobs:
  asan:
    name: asan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install llvm
        # Required to resolve symbols in sanitizer output
        run: sudo apt-get install -y llvm
      - name: Install Rust ${{ env.rust_nightly }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_nightly }}
          override: true
      # Disable cache for now as changing options screws with it
      # Todo: re-enable once on main
      - uses: Swatinem/rust-cache@v1
      - name: asan
        run: cargo test --workspace --all-features --target x86_64-unknown-linux-gnu --tests -- --test-threads 1
        env:
          RUSTFLAGS: -Z sanitizer=address
          TRYBUILD: overwrite #Ignore `trybuild` errors

  # asan2:
  #   name: asan - mine
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install llvm
  #       # Required to resolve symbols in sanitizer output
  #       run: sudo apt-get install -y llvm
  #     - name: Install Rust ${{ env.rust_nightly }}
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ env.rust_nightly }}
  #         override: true
  #     # Disable cache for now as changing options screws with it
  #     # Todo: re-enable once on main
  #     #- uses: Swatinem/rust-cache@v1
  #     # - name: asan
  #     #   run: cargo test --workspace --all-features --target x86_64-unknown-linux-gnu --tests -- --test-threads 1
  #     #   env:
  #     #     RUSTFLAGS: -Z sanitizer=address

  #     - name: Build
  #       uses: actions-rs/cargo@v1
  #       env:
  #         RUSTFLAGS: "-Z sanitizer=address"
  #       with:
  #         command: build
  #         args: --target x86_64-unknown-linux-gnu --tests --workspace --all-features

  #     - name: Run tests with leak sanitizer
  #       uses: actions-rs/cargo@v1
  #       env:
  #         RUSTFLAGS: "-Z sanitizer=address"
  #         TRYBUILD: overwrite #Ignore `trybuild` errors
  #       with:
  #         command: test
  #         args: --target x86_64-unknown-linux-gnu --tests --workspace --all-features -- --test-threads 1
